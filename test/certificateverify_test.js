import { verifyCertificateVerify } from "../src/certificateverify.js";
import { verifyCertificateVerify_0 } from "../src/certificateverify.js";
import { CertificateVerify, createSignature } from "../src/certificateverify.js";
import { assertEquals, SignatureScheme, unity, Uint16, HandshakeType, Uint24, Byte } from "../src/dep.ts"
import { Transcript } from "../src/utils.js";

Deno.test("CertificateVerify", () => {
   const certificateVerifyMsg = Byte.fromHex(`0f 00 00 84 08 04 00 80 5a 74 7c
      5d 88 fa 9b d2 e5 5a b0 85 a6 10 15 b7 21 1f 82 4c d4 84 14 5a
      b3 ff 52 f1 fd a8 47 7b 0b 7a bc 90 db 78 e2 d3 3a 5c 14 1a 07
      86 53 fa 6b ef 78 0c 5e a2 48 ee aa a7 85 c4 f3 94 ca b6 d3 0b
      be 8d 48 59 ee 51 1f 60 29 57 b1 54 11 ac 02 76 71 45 9e 46 44
      5c 9e a5 8c 18 1e 81 8e 95 b8 c3 fb 0b f3 27 84 09 d3 be 15 2a
      3d a5 04 3e 06 3d da 65 cd f5 ae a2 0d 53 df ac d4 2f 74 f3`)

   const certificateVerifyMsg_back = CertificateVerify.from(certificateVerifyMsg.slice(4));
   assertEquals(certificateVerifyMsg.slice(4).toString(), certificateVerifyMsg_back.toString())
})

export const clientHelloMsg = Byte.fromHex(
   `01 00 00 c0 03 03 cb 34 ec b1 e7 81 63
   ba 1c 38 c6 da cb 19 6a 6d ff a2 1a 8d 99 12 ec 18 a2 ef 62 83
   02 4d ec e7 00 00 06 13 01 13 03 13 02 01 00 00 91 00 00 00 0b
   00 09 00 00 06 73 65 72 76 65 72 ff 01 00 01 00 00 0a 00 14 00
   12 00 1d 00 17 00 18 00 19 01 00 01 01 01 02 01 03 01 04 00 23
   00 00 00 33 00 26 00 24 00 1d 00 20 99 38 1d e5 60 e4 bd 43 d2
   3d 8e 43 5a 7d ba fe b3 c0 6e 51 c1 3c ae 4d 54 13 69 1e 52 9a
   af 2c 00 2b 00 03 02 03 04 00 0d 00 20 00 1e 04 03 05 03 06 03
   02 03 08 04 08 05 08 06 04 01 05 01 06 01 02 01 04 02 05 02 06
   02 02 02 00 2d 00 02 01 01 00 1c 00 02 40 01`)

export const serverHelloMsg = Byte.fromHex(
   `02 00 00 56 03 03 a6 af 06 a4 12 18 60 dc 5e
   6e 60 24 9c d3 4c 95 93 0c 8a c5 cb 14 34 da c1 55 77 2e d3 e2
   69 28 00 13 01 00 00 2e 00 33 00 24 00 1d 00 20 c9 82 88 76 11
   20 95 fe 66 76 2b db f7 c6 72 e1 56 d6 cc 25 3b 83 3d f1 dd 69
   b1 b0 4e 75 1f 0f 00 2b 00 02 03 04`)

export const encryptedExtensionsMsg = Byte.fromHex(`08 00 00 24 00 22 00 0a 00 14 00
         12 00 1d 00 17 00 18 00 19 01 00 01 01 01 02 01 03 01 04 00 1c
         00 02 40 01 00 00 00 00`)

export const certificateMsg = Byte.fromHex(
   `0b 00 01 b9 00 00 01 b5 00 01 b0 30 82
   01 ac 30 82 01 15 a0 03 02 01 02 02 01 02 30 0d 06 09 2a 86 48
   86 f7 0d 01 01 0b 05 00 30 0e 31 0c 30 0a 06 03 55 04 03 13 03
   72 73 61 30 1e 17 0d 31 36 30 37 33 30 30 31 32 33 35 39 5a 17
   0d 32 36 30 37 33 30 30 31 32 33 35 39 5a 30 0e 31 0c 30 0a 06
   03 55 04 03 13 03 72 73 61 30 81 9f 30 0d 06 09 2a 86 48 86 f7
   0d 01 01 01 05 00 03 81 8d 00 30 81 89 02 81 81 00 b4 bb 49 8f
   82 79 30 3d 98 08 36 39 9b 36 c6 98 8c 0c 68 de 55 e1 bd b8 26
   d3 90 1a 24 61 ea fd 2d e4 9a 91 d0 15 ab bc 9a 95 13 7a ce 6c
   1a f1 9e aa 6a f9 8c 7c ed 43 12 09 98 e1 87 a8 0e e0 cc b0 52
   4b 1b 01 8c 3e 0b 63 26 4d 44 9a 6d 38 e2 2a 5f da 43 08 46 74
   80 30 53 0e f0 46 1c 8c a9 d9 ef bf ae 8e a6 d1 d0 3e 2b d1 93
   ef f0 ab 9a 80 02 c4 74 28 a6 d3 5a 8d 88 d7 9f 7f 1e 3f 02 03
   01 00 01 a3 1a 30 18 30 09 06 03 55 1d 13 04 02 30 00 30 0b 06
   03 55 1d 0f 04 04 03 02 05 a0 30 0d 06 09 2a 86 48 86 f7 0d 01
   01 0b 05 00 03 81 81 00 85 aa d2 a0 e5 b9 27 6b 90 8c 65 f7 3a
   72 67 17 06 18 a5 4c 5f 8a 7b 33 7d 2d f7 a5 94 36 54 17 f2 ea
   e8 f8 a5 8c 8f 81 72 f9 31 9c f3 6b 7f d6 c5 5b 80 f2 1a 03 01
   51 56 72 60 96 fd 33 5e 5e 67 f2 db f1 02 70 2e 60 8c ca e6 be
   c1 fc 63 a4 2a 99 be 5c 3e b7 10 7c 3c 54 e9 b9 eb 2b d5 20 3b
   1c 3b 84 e0 a8 b2 f7 59 40 9b a3 ea c9 d9 1d 40 2d cc 0c c8 f8
   96 12 29 ac 91 87 b4 2b 4d e1 00 00`)

const certificateVerifyMsg = Byte.fromHex(`0f 00 00 84 08 04 00 80 5a 74 7c
         5d 88 fa 9b d2 e5 5a b0 85 a6 10 15 b7 21 1f 82 4c d4 84 14 5a
         b3 ff 52 f1 fd a8 47 7b 0b 7a bc 90 db 78 e2 d3 3a 5c 14 1a 07
         86 53 fa 6b ef 78 0c 5e a2 48 ee aa a7 85 c4 f3 94 ca b6 d3 0b
         be 8d 48 59 ee 51 1f 60 29 57 b1 54 11 ac 02 76 71 45 9e 46 44
         5c 9e a5 8c 18 1e 81 8e 95 b8 c3 fb 0b f3 27 84 09 d3 be 15 2a
         3d a5 04 3e 06 3d da 65 cd f5 ae a2 0d 53 df ac d4 2f 74 f3`);

const n = Byte.fromHex(`b4 bb 49 8f 82 79 30 3d 98 08 36 39 9b 36 c6 98 8c
            0c 68 de 55 e1 bd b8 26 d3 90 1a 24 61 ea fd 2d e4 9a 91 d0 15 ab
            bc 9a 95 13 7a ce 6c 1a f1 9e aa 6a f9 8c 7c ed 43 12 09 98 e1 87
            a8 0e e0 cc b0 52 4b 1b 01 8c 3e 0b 63 26 4d 44 9a 6d 38 e2 2a 5f
            da 43 08 46 74 80 30 53 0e f0 46 1c 8c a9 d9 ef bf ae 8e a6 d1 d0
            3e 2b d1 93 ef f0 ab 9a 80 02 c4 74 28 a6 d3 5a 8d 88 d7 9f 7f 1e
            3f`).toBase64Url();
const e = Byte.fromHex(`01 00 01`).toBase64Url();
const d = Byte.fromHex(`04 de a7 05 d4 3a 6e a7 20 9d d8 07 21 11 a8 3c 81
            e3 22 a5 92 78 b3 34 80 64 1e af 7c 0a 69 85 b8 e3 1c 44 f6 de 62
            e1 b4 c2 30 9f 61 26 e7 7b 7c 41 e9 23 31 4b bf a3 88 13 05 dc 12
            17 f1 6c 81 9c e5 38 e9 22 f3 69 82 8d 0e 57 19 5d 8c 84 88 46 02
            07 b2 fa a7 26 bc f7 08 bb d7 db 7f 67 9f 89 34 92 fc 2a 62 2e 08
            97 0a ac 44 1c e4 e0 c3 08 8d f2 5a e6 79 23 3d f8 a3 bd a2 ff 99
            41`).toBase64Url();
const p = Byte.fromHex(`e4 35 fb 7c c8 37 37 75 6d ac ea 96 ab 7f 59 a2 cc 10 69 db
            7d eb 19 0e 17 e3 3a 53 2b 27 3f 30 a3 27 aa 0a aa bc 58 cd 67 46
            6a f9 84 5f ad c6 75 fe 09 4a f9 2c 4b d1 f2 c1 bc 33 dd 2e 05 15`).toBase64Url();
const q = Byte.fromHex(`ca bd 3b c0 e0 43 86 64 c8 d4 cc 9f 99 97 7a 94 d9 bb fe ad
            8e 43 87 0a ba e3 f7 eb 8b 4e 0e ee 8a f1 d9 b4 71 9b a6 19 6c f2
            cb ba ee eb f8 b3 49 0a fe 9e 9f fa 74 a8 8a a5 1f c6 45 62 93 03`).toBase64Url();
const dp = Byte.fromHex(`3f 57 34 5c 27 fe 1b 68 7e 6e 76 16 27 b7 8b 1b 82 64 33
            dd 76 0f a0 be a6 a6 ac f3 94 90 aa 1b 47 cd a4 86 9d 68 f5 84 dd
            5b 50 29 bd 32 09 3b 82 58 66 1f e7 15 02 5e 5d 70 a4 5a 08 d3 d3
            19`).toBase64Url();
const dq = Byte.fromHex(`18 3d a0 13 63 bd 2f 28 85 ca cb dc 99 64 bf 47 64 f1 51
            76 36 f8 64 01 28 6f 71 89 3c 52 cc fe 40 a6 c2 3d 0d 08 6b 47 c6
            fb 10 d8 fd 10 41 e0 4d ef 7e 9a 40 ce 95 7c 41 77 94 e1 04 12 d1
            39`).toBase64Url();
const qi = Byte.fromHex(`83 9c a9 a0 85 e4 28 6b 2c 90 e4 66 99 7a 2c 68 1f 21
            33 9a a3 47 78 14 e4 de c1 18 33 05 0e d5 0d d1 3c c0 38 04 8a 43
            c5 9b 2a cc 41 68 89 c0 37 66 5f e5 af a6 05 96 9f 8c 01 df a5 ca
            96 9d`).toBase64Url();

const jwk = {
   kty: 'RSA', n, e, d, p, q, dp, dq, qi
}

var privateKey = await crypto.subtle.importKey('jwk', jwk, { name: 'RSA-PSS', hash: 'SHA-256' }, true, ['sign'])

//SignatureScheme.RSA_PKCS1_SHA256
const transcript = new Transcript(
   clientHelloMsg, serverHelloMsg, encryptedExtensionsMsg, certificateMsg
)

const isValid = await verifyCertificateVerify(transcript, certificateVerifyMsg);
const inValid_0 = await verifyCertificateVerify_0(clientHelloMsg, serverHelloMsg, encryptedExtensionsMsg, certificateMsg, certificateVerifyMsg)

const signature = await createSignature(clientHelloMsg, serverHelloMsg, encryptedExtensionsMsg, certificateMsg, privateKey, { name: "RSA-PSS", saltLength: 32 });
const certificateVerify = unity(SignatureScheme.RSA_PSS_PSS_SHA256.byte, Uint16.fromValue(signature.length), signature);

const certificateVerifyMsg_0 = unity(HandshakeType.CERTIFICATE_VERIFY.byte, Uint24.fromValue(certificateVerify.length), certificateVerify)


const transcript_0 = new Transcript(clientHelloMsg, serverHelloMsg, encryptedExtensionsMsg, certificateMsg)
const isValid_1 = await verifyCertificateVerify(transcript_0, certificateVerifyMsg_0);
const isValid_2 = await verifyCertificateVerify_0(clientHelloMsg, serverHelloMsg, encryptedExtensionsMsg, certificateMsg, certificateVerifyMsg_0);

const clientHelloMsg_first = Uint8Array.of(1,0,0,162,3,3,139,172,189,234,205,216,28,164,124,173,112,195,157,66,164,17,189,184,207,150,193,44,106,244,230,38,12,199,27,4,63,127,0,0,6,19,2,19,3,19,1,1,0,0,115,0,10,0,8,0,6,0,29,0,23,0,24,0,13,0,14,0,12,4,3,5,3,8,4,8,5,8,9,8,10,0,43,0,3,2,3,4,0,45,0,2,1,1,0,0,0,26,0,24,0,0,21,115,109,116,112,45,109,97,105,108,46,111,117,116,108,111,111,107,46,99,111,109,0,51,0,38,0,36,0,29,0,32,58,118,63,127,198,146,40,10,78,51,132,149,71,134,185,117,53,40,60,107,10,198,110,60,162,137,89,70,196,174,131,44);
const helloRetryRequest = Uint8Array.of(2,0,0,52,3,3,207,33,173,116,229,154,97,17,190,29,140,2,30,101,184,145,194,162,17,22,122,187,140,94,7,158,9,226,200,168,51,156,0,19,2,0,0,12,0,43,0,2,3,4,0,51,0,2,0,24);
const clientHelloMsg_0 = Uint8Array.of(1,0,0,227,3,3,139,172,189,234,205,216,28,164,124,173,112,195,157,66,164,17,189,184,207,150,193,44,106,244,230,38,12,199,27,4,63,127,0,0,6,19,2,19,3,19,1,1,0,0,180,0,10,0,8,0,6,0,29,0,23,0,24,0,13,0,14,0,12,4,3,5,3,8,4,8,5,8,9,8,10,0,43,0,3,2,3,4,0,45,0,2,1,1,0,0,0,26,0,24,0,0,21,115,109,116,112,45,109,97,105,108,46,111,117,116,108,111,111,107,46,99,111,109,0,51,0,103,0,101,0,24,0,97,4,54,47,59,69,157,55,204,148,62,212,58,179,247,50,218,3,139,61,164,10,158,184,92,70,146,52,11,99,250,118,216,102,176,184,72,139,170,70,99,87,53,93,38,164,202,248,59,22,97,176,58,250,63,58,67,127,153,189,213,103,201,91,217,253,253,111,97,40,233,42,161,229,23,32,97,195,203,124,109,223,153,108,69,63,88,203,119,13,45,159,150,215,254,137,54,177);
const serverHelloMsg_0 = Uint8Array.of(2,0,0,151,3,3,17,64,225,245,250,78,71,142,25,174,211,212,207,143,98,25,78,89,246,156,163,223,205,69,227,231,171,18,119,185,55,60,0,19,2,0,0,111,0,43,0,2,3,4,0,51,0,101,0,24,0,97,4,36,201,51,228,157,145,219,91,24,59,223,49,123,69,91,181,42,79,148,122,245,96,188,177,26,211,226,75,95,40,157,224,26,241,195,231,105,16,226,147,91,187,59,154,47,27,220,196,121,170,20,188,201,252,124,99,255,52,26,224,70,173,114,172,208,160,219,136,219,107,40,128,89,177,248,10,120,8,119,140,201,189,15,188,122,183,84,163,166,8,104,106,42,251,38,194)
const encryptedExtensionsMsg_0 = Uint8Array.of(8,0,0,2,0,0);
const certificateRequestMsg_0 = Uint8Array.of(13,0,0,33,0,0,30,0,13,0,26,0,24,8,4,8,5,8,6,4,1,5,1,2,1,4,3,5,3,2,3,2,2,6,1,6,3);
const certificateMsg_0 = Uint8Array.of(11,0,13,161,0,0,13,157,0,8,169,48,130,8,165,48,130,7,141,160,3,2,1,2,2,16,14,205,171,21,45,33,97,247,200,67,210,95,63,0,252,222,48,13,6,9,42,134,72,134,247,13,1,1,11,5,0,48,75,49,11,48,9,6,3,85,4,6,19,2,85,83,49,21,48,19,6,3,85,4,10,19,12,68,105,103,105,67,101,114,116,32,73,110,99,49,37,48,35,6,3,85,4,3,19,28,68,105,103,105,67,101,114,116,32,67,108,111,117,100,32,83,101,114,118,105,99,101,115,32,67,65,45,49,48,30,23,13,50,52,48,54,50,55,48,48,48,48,48,48,90,23,13,50,53,48,54,50,54,50,51,53,57,53,57,90,48,106,49,11,48,9,6,3,85,4,6,19,2,85,83,49,19,48,17,6,3,85,4,8,19,10,87,97,115,104,105,110,103,116,111,110,49,16,48,14,6,3,85,4,7,19,7,82,101,100,109,111,110,100,49,30,48,28,6,3,85,4,10,19,21,77,105,99,114,111,115,111,102,116,32,67,111,114,112,111,114,97,116,105,111,110,49,20,48,18,6,3,85,4,3,19,11,111,117,116,108,111,111,107,46,99,111,109,48,130,1,34,48,13,6,9,42,134,72,134,247,13,1,1,1,5,0,3,130,1,15,0,48,130,1,10,2,130,1,1,0,208,132,179,206,38,79,91,237,10,207,186,82,230,213,160,2,74,67,52,208,124,4,54,99,19,16,118,112,59,112,45,177,3,69,139,122,101,79,36,73,141,158,99,83,77,187,185,66,84,158,166,168,128,190,71,2,30,127,61,42,249,49,53,40,62,252,77,147,246,232,184,35,138,48,127,103,56,200,226,237,130,27,183,241,161,90,158,29,165,107,202,13,126,147,13,66,181,91,40,25,87,187,84,195,150,199,255,186,253,32,91,157,178,55,58,225,51,17,129,27,39,52,127,179,42,72,95,17,72,41,192,31,105,29,11,166,222,23,4,228,12,33,229,88,64,118,241,109,217,68,76,160,41,200,31,35,245,156,237,57,93,180,235,223,147,69,241,94,39,180,125,113,183,37,205,128,13,250,213,72,141,240,18,225,89,214,41,113,26,156,232,188,214,130,69,246,103,219,124,170,131,40,183,16,8,126,242,178,15,197,26,123,54,52,4,144,251,130,215,71,132,181,135,2,14,253,75,53,14,81,99,141,154,65,188,237,139,104,243,24,43,242,122,29,139,90,39,37,61,200,119,40,19,116,42,169,2,3,1,0,1,163,130,5,100,48,130,5,96,48,31,6,3,85,29,35,4,24,48,22,128,20,221,81,208,162,49,115,169,115,174,143,180,1,126,93,140,87,203,159,240,247,48,29,6,3,85,29,14,4,22,4,20,12,30,132,211,99,104,3,2,67,37,40,235,241,159,229,18,8,139,105,156,48,130,2,16,6,3,85,29,17,4,130,2,7,48,130,2,3,130,22,42,46,99,108,111,46,102,111,111,116,112,114,105,110,116,100,110,115,46,99,111,109,130,13,42,46,104,111,116,109,97,105,108,46,99,111,109,130,22,42,46,105,110,116,101,114,110,97,108,46,111,117,116,108,111,111,107,46,99,111,109,130,10,42,46,108,105,118,101,46,99,111,109,130,22,42,46,110,114,98,46,102,111,111,116,112,114,105,110,116,100,110,115,46,99,111,109,130,12,42,46,111,102,102,105,99,101,46,99,111,109,130,15,42,46,111,102,102,105,99,101,51,54,53,46,99,111,109,130,13,42,46,111,117,116,108,111,111,107,46,99,111,109,130,23,42,46,111,117,116,108,111,111,107,46,111,102,102,105,99,101,51,54,53,46,99,111,109,130,27,97,116,116,97,99,104,109,101,110,116,46,111,117,116,108,111,111,107,46,108,105,118,101,46,110,101,116,130,29,97,116,116,97,99,104,109,101,110,116,46,111,117,116,108,111,111,107,46,111,102,102,105,99,101,46,110,101,116,130,32,97,116,116,97,99,104,109,101,110,116,46,111,117,116,108,111,111,107,46,111,102,102,105,99,101,112,112,101,46,110,101,116,130,22,97,116,116,97,99,104,109,101,110,116,115,46,111,102,102,105,99,101,46,110,101,116,130,26,97,116,116,97,99,104,109,101,110,116,115,45,115,100,102,46,111,102,102,105,99,101,46,110,101,116,130,29,99,99,115,46,108,111,103,105,110,46,109,105,99,114,111,115,111,102,116,111,110,108,105,110,101,46,99,111,109,130,33,99,99,115,45,115,100,102,46,108,111,103,105,110,46,109,105,99,114,111,115,111,102,116,111,110,108,105,110,101,46,99,111,109,130,11,104,111,116,109,97,105,108,46,99,111,109,130,22,109,97,105,108,46,115,101,114,118,105,99,101,115,46,108,105,118,101,46,99,111,109,130,13,111,102,102,105,99,101,51,54,53,46,99,111,109,130,11,111,117,116,108,111,111,107,46,99,111,109,130,18,111,117,116,108,111,111,107,46,111,102,102,105,99,101,46,99,111,109,130,20,115,117,98,115,116,114,97,116,101,46,111,102,102,105,99,101,46,99,111,109,130,24,115,117,98,115,116,114,97,116,101,45,115,100,102,46,111,102,102,105,99,101,46,99,111,109,48,62,6,3,85,29,32,4,55,48,53,48,51,6,6,103,129,12,1,2,2,48,41,48,39,6,8,43,6,1,5,5,7,2,1,22,27,104,116,116,112,58,47,47,119,119,119,46,100,105,103,105,99,101,114,116,46,99,111,109,47,67,80,83,48,14,6,3,85,29,15,1,1,255,4,4,3,2,5,160,48,29,6,3,85,29,37,4,22,48,20,6,8,43,6,1,5,5,7,3,1,6,8,43,6,1,5,5,7,3,2,48,129,141,6,3,85,29,31,4,129,133,48,129,130,48,63,160,61,160,59,134,57,104,116,116,112,58,47,47,99,114,108,51,46,100,105,103,105,99,101,114,116,46,99,111,109,47,68,105,103,105,67,101,114,116,67,108,111,117,100,83,101,114,118,105,99,101,115,67,65,45,49,45,103,49,46,99,114,108,48,63,160,61,160,59,134,57,104,116,116,112,58,47,47,99,114,108,52,46,100,105,103,105,99,101,114,116,46,99,111,109,47,68,105,103,105,67,101,114,116,67,108,111,117,100,83,101,114,118,105,99,101,115,67,65,45,49,45,103,49,46,99,114,108,48,124,6,8,43,6,1,5,5,7,1,1,4,112,48,110,48,37,6,8,43,6,1,5,5,7,48,1,134,25,104,116,116,112,58,47,47,111,99,115,112,120,46,100,105,103,105,99,101,114,116,46,99,111,109,48,69,6,8,43,6,1,5,5,7,48,2,134,57,104,116,116,112,58,47,47,99,97,99,101,114,116,115,46,100,105,103,105,99,101,114,116,46,99,111,109,47,68,105,103,105,67,101,114,116,67,108,111,117,100,83,101,114,118,105,99,101,115,67,65,45,49,46,99,114,116,48,12,6,3,85,29,19,1,1,255,4,2,48,0,48,130,1,125,6,10,43,6,1,4,1,214,121,2,4,2,4,130,1,109,4,130,1,105,1,103,0,118,0,78,117,163,39,92,154,16,195,56,91,108,212,223,63,82,235,29,240,224,142,27,141,105,192,177,250,100,177,98,154,57,223,0,0,1,144,88,81,18,151,0,0,4,3,0,71,48,69,2,33,0,226,135,238,32,158,96,174,5,173,209,61,101,246,254,72,64,157,244,191,202,79,109,7,115,99,165,51,94,247,195,95,60,2,32,40,172,238,28,74,34,69,237,180,227,70,66,108,47,20,128,99,35,158,65,197,61,248,88,11,57,170,171,13,214,250,226,0,117,0,125,89,30,18,225,120,42,123,28,97,103,124,94,253,248,208,135,92,20,160,78,149,158,185,3,47,217,14,140,46,121,184,0,0,1,144,88,81,18,149,0,0,4,3,0,70,48,68,2,32,105,148,54,183,111,174,118,222,66,64,88,62,90,115,155,138,103,40,47,54,59,142,89,51,65,98,170,105,69,87,237,245,2,32,97,196,85,95,153,99,238,148,236,97,238,176,186,30,116,251,14,139,76,101,13,68,243,103,222,167,91,176,162,119,184,200,0,118,0,230,210,49,99,64,119,140,193,16,65,6,215,113,185,206,193,210,64,246,150,132,134,251,186,135,50,29,253,30,55,142,80,0,0,1,144,88,81,18,164,0,0,4,3,0,71,48,69,2,32,35,153,143,132,222,50,81,12,162,170,208,166,110,46,210,65,33,115,164,188,125,159,50,180,237,82,86,85,116,45,148,202,2,33,0,227,216,254,150,58,26,106,88,134,89,249,221,216,124,52,132,100,236,86,35,20,194,82,36,18,105,56,254,223,162,82,120,48,13,6,9,42,134,72,134,247,13,1,1,11,5,0,3,130,1,1,0,108,184,106,100,197,135,135,225,79,0,27,2,25,111,182,199,214,177,231,69,80,221,96,162,112,110,70,54,67,90,172,188,11,80,4,219,92,230,65,209,189,15,57,181,88,239,69,120,174,172,164,92,93,79,19,205,164,89,122,102,47,29,99,235,95,161,240,62,69,71,205,11,205,64,72,200,81,143,198,119,125,105,187,224,76,121,4,42,191,40,150,254,16,217,36,117,72,18,144,162,25,51,69,149,223,62,152,211,67,95,226,79,184,172,5,22,155,117,174,163,55,48,67,86,242,241,121,73,66,226,232,59,35,17,94,238,226,131,220,204,129,119,163,54,53,107,92,77,30,74,79,111,248,149,29,164,39,178,9,108,66,151,122,97,116,138,53,87,152,177,38,49,124,11,171,70,233,171,136,238,42,26,129,95,29,116,173,170,164,141,76,199,213,186,6,105,50,185,108,241,194,186,201,142,58,175,201,7,73,239,215,230,219,47,32,254,54,192,103,199,194,251,157,201,138,123,55,10,97,182,23,94,66,142,238,100,61,125,88,203,68,182,22,156,140,185,217,141,53,73,206,10,24,156,140,152,0,0,0,4,234,48,130,4,230,48,130,3,206,160,3,2,1,2,2,16,15,23,26,72,198,242,35,128,146,24,205,46,214,221,192,232,48,13,6,9,42,134,72,134,247,13,1,1,11,5,0,48,97,49,11,48,9,6,3,85,4,6,19,2,85,83,49,21,48,19,6,3,85,4,10,19,12,68,105,103,105,67,101,114,116,32,73,110,99,49,25,48,23,6,3,85,4,11,19,16,119,119,119,46,100,105,103,105,99,101,114,116,46,99,111,109,49,32,48,30,6,3,85,4,3,19,23,68,105,103,105,67,101,114,116,32,71,108,111,98,97,108,32,82,111,111,116,32,67,65,48,30,23,13,50,48,48,57,50,53,48,48,48,48,48,48,90,23,13,51,48,48,57,50,52,50,51,53,57,53,57,90,48,75,49,11,48,9,6,3,85,4,6,19,2,85,83,49,21,48,19,6,3,85,4,10,19,12,68,105,103,105,67,101,114,116,32,73,110,99,49,37,48,35,6,3,85,4,3,19,28,68,105,103,105,67,101,114,116,32,67,108,111,117,100,32,83,101,114,118,105,99,101,115,32,67,65,45,49,48,130,1,34,48,13,6,9,42,134,72,134,247,13,1,1,1,5,0,3,130,1,15,0,48,130,1,10,2,130,1,1,0,209,173,246,135,20,121,84,39,87,199,47,5,104,60,155,60,205,103,236,69,16,44,132,242,164,71,196,217,83,66,69,9,187,228,254,51,193,215,188,70,47,209,139,230,183,181,103,120,124,106,112,190,253,184,229,182,84,207,76,94,172,184,34,116,115,85,41,8,115,200,100,247,208,149,9,14,121,131,80,191,95,245,212,204,155,66,97,142,128,4,185,65,170,206,78,18,153,155,172,214,197,190,91,2,115,181,22,164,171,113,98,212,152,234,64,57,133,166,246,187,47,232,231,135,194,139,246,156,50,205,236,248,62,191,137,231,116,35,130,75,218,234,191,115,166,37,60,253,191,169,229,104,255,248,48,162,96,199,59,46,163,243,197,127,59,59,253,15,49,161,124,116,15,208,191,20,196,189,104,241,165,231,107,167,223,155,0,126,70,37,78,230,232,19,243,246,6,199,212,111,11,39,32,66,93,97,188,63,96,210,124,150,114,201,124,176,139,255,249,72,5,83,4,250,34,175,183,205,81,93,109,221,144,116,3,240,51,79,244,199,192,62,86,70,71,175,115,32,139,220,122,62,163,242,93,255,2,3,1,0,1,163,130,1,174,48,130,1,170,48,29,6,3,85,29,14,4,22,4,20,221,81,208,162,49,115,169,115,174,143,180,1,126,93,140,87,203,159,240,247,48,31,6,3,85,29,35,4,24,48,22,128,20,3,222,80,53,86,209,76,187,102,240,163,226,27,27,195,151,178,61,209,85,48,14,6,3,85,29,15,1,1,255,4,4,3,2,1,134,48,29,6,3,85,29,37,4,22,48,20,6,8,43,6,1,5,5,7,3,1,6,8,43,6,1,5,5,7,3,2,48,18,6,3,85,29,19,1,1,255,4,8,48,6,1,1,255,2,1,0,48,118,6,8,43,6,1,5,5,7,1,1,4,106,48,104,48,36,6,8,43,6,1,5,5,7,48,1,134,24,104,116,116,112,58,47,47,111,99,115,112,46,100,105,103,105,99,101,114,116,46,99,111,109,48,64,6,8,43,6,1,5,5,7,48,2,134,52,104,116,116,112,58,47,47,99,97,99,101,114,116,115,46,100,105,103,105,99,101,114,116,46,99,111,109,47,68,105,103,105,67,101,114,116,71,108,111,98,97,108,82,111,111,116,67,65,46,99,114,116,48,123,6,3,85,29,31,4,116,48,114,48,55,160,53,160,51,134,49,104,116,116,112,58,47,47,99,114,108,51,46,100,105,103,105,99,101,114,116,46,99,111,109,47,68,105,103,105,67,101,114,116,71,108,111,98,97,108,82,111,111,116,67,65,46,99,114,108,48,55,160,53,160,51,134,49,104,116,116,112,58,47,47,99,114,108,52,46,100,105,103,105,99,101,114,116,46,99,111,109,47,68,105,103,105,67,101,114,116,71,108,111,98,97,108,82,111,111,116,67,65,46,99,114,108,48,48,6,3,85,29,32,4,41,48,39,48,7,6,5,103,129,12,1,1,48,8,6,6,103,129,12,1,2,1,48,8,6,6,103,129,12,1,2,2,48,8,6,6,103,129,12,1,2,3,48,13,6,9,42,134,72,134,247,13,1,1,11,5,0,3,130,1,1,0,52,145,57,217,48,255,204,91,230,97,1,169,208,253,231,181,92,220,151,42,172,55,176,32,107,251,54,74,104,70,162,140,55,218,23,1,89,206,142,86,4,8,45,136,215,157,208,112,69,212,231,235,255,123,157,191,185,107,75,4,124,202,28,238,107,104,216,2,230,46,41,190,94,6,122,110,13,167,65,125,64,218,85,152,82,129,104,187,70,3,31,49,172,41,67,92,45,3,163,160,149,56,183,213,12,198,254,190,37,238,209,7,190,254,143,121,149,154,195,113,4,93,119,67,226,196,29,104,152,248,130,82,107,53,106,191,188,59,222,44,219,0,90,58,112,95,108,43,72,105,169,217,146,41,208,127,48,215,231,79,214,5,227,245,152,151,32,176,22,26,90,43,121,143,185,77,151,136,236,198,179,3,225,48,196,112,129,172,39,147,133,211,53,233,173,28,244,170,124,255,201,205,1,236,121,242,251,229,60,121,115,203,71,36,7,41,220,47,208,15,226,92,81,65,232,113,67,238,91,173,177,239,220,14,246,147,101,228,222,84,226,50,21,21,174,36,199,170,77,67,43,88,191,3,15,122,0,0);
const certificateVerifyMsg_1 = Uint8Array.of(15,0,1,4,8,4,1,0,1,25,164,17,117,87,219,195,89,42,119,106,13,161,200,255,95,48,54,71,245,122,96,198,179,200,15,251,86,42,14,63,160,206,201,144,44,172,112,14,37,148,234,38,11,121,211,98,38,93,160,132,194,15,209,122,16,184,184,35,143,78,25,130,38,31,55,101,220,128,186,99,8,121,41,4,78,230,46,160,236,147,8,71,172,243,181,30,23,215,76,84,219,170,242,70,214,167,111,91,109,114,14,218,64,0,95,74,169,118,191,177,158,55,113,176,152,4,239,160,225,178,44,154,113,248,242,113,8,215,53,185,110,167,115,6,204,83,246,22,10,213,163,48,85,112,133,129,39,168,144,37,189,209,74,205,252,20,82,147,246,151,49,183,145,108,240,223,67,176,199,47,162,27,147,22,149,204,134,82,246,73,93,65,202,85,197,47,30,116,255,78,187,168,192,109,78,125,125,38,232,14,27,220,94,153,40,80,110,201,95,64,119,59,74,56,172,236,67,223,26,208,169,227,143,125,238,177,46,121,154,35,151,233,125,114,119,251,210,182,196,141,212,27,128,87,150,70,254,101,7,35,43,108,219,29)
helloRetryRequest.isHRR = true
const transcript_1 = new Transcript(
   clientHelloMsg_first, 
   helloRetryRequest,
   clientHelloMsg_0,
   serverHelloMsg_0,
   encryptedExtensionsMsg_0,
   certificateRequestMsg_0,
   certificateMsg_0
)
const isValid_3 = await verifyCertificateVerify(transcript_1, certificateVerifyMsg_1);

const _null = null;



